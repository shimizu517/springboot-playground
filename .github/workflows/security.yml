name: Security Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  credentials-detection:
    name: Detect Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run truffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          extra_args: --only-verified

  sast:
    name: Static Application Security Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "adopt"

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Maven dependencies
        run: ./mvnw dependency:go-offline
        working-directory: ./demo

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.9
        with:
          projectKey: your_project_key
          organization: your_organization
          token: ${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dast:
    name: Dynamic Application Security Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "adopt"

      - name: Build the application
        run: ./mvnw package
        working-directory: ./demo

      - name: Start the application
        run: |
          java -jar target/demo-0.0.1-SNAPSHOT.jar &
          echo $! > pid.txt
        env:
          SPRING_PROFILES_ACTIVE: test
        working-directory: ./demo

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: "http://localhost:8080"
          rules_file: ".github/zap/rules.tsv"

      - name: Stop the application
        run: kill $(cat pid.txt)
        working-directory: ./demo
